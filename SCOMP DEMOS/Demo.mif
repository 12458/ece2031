WIDTH=16;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
0000: 902D; --                          IN KeyIO
0001: 107E; --                          STORE KeyInput
0002: 4000; --                          JZERO Initialization
0003: 487F; --                          AND B0
0004: 3808; --                          JPOS Demo1_Loop
0005: 4880; --                          AND B1
0006: 3817; --                          JPOS Demo2_Loop
0007: 2800; --                          JUMP Initialization
0008: B800; --                          LOADI 0
0009: 9820; --                          OUT LEDToggle ; Turn off all LEDs
000A: 907E; --                          IN KeyInput
000B: 4881; --                          AND B2
000C: 3800; --                          JPOS Initialization
000D: 487F; --                          AND B0
000E: 400A; --                          JZERO AdderLoop ; Only continue if KEY1 is pressed
000F: 9000; --                          IN Switches ; Grab input value from Switches
0010: 1085; --                          STORE AdderInput ; Store User input
0011: 0884; --                          LOAD AdderSum ; Load current running sum (does nothing on first loop)
0012: 1885; --                          ADD AdderInput ; Add input value to running Sum
0013: 4886; --                          AND 10bits ; Mask relevant bits 
0014: 1084; --                          STORE AdderSum
0015: 9820; --                          OUT LEDToggle ; Display new sum on LEDs
0016: 280A; --                          JUMP AdderLoop ; Jump to InputLoop to wait for next value
0017: 902D; --                          IN KeyIO
0018: 107E; --                          STORE KeyInput
0019: 4017; --                          JZERO Demo2_Loop ; Only continue if a key is pressed
001A: 487F; --                          AND B0
001B: 3800; --                          JPOS Initialization
001C: 4880; --                          AND B1
001D: 3839; --                          JPOS Individual_Loop
001E: 4881; --                          AND B2 
001F: 3820; --                          JPOS Global_Loop
0020: 902D; --                          IN KeyIO
0021: 107E; --                          STORE KeyInput
0022: 4020; --                          JZERO Global_Loop
0023: 487F; --                          AND B0
0024: 3800; --                          JPOS Initialization
0025: 4880; --                          AND B1
0026: 382A; --                          JPOS IncreaseGlobal
0027: 4881; --                          AND B2
0028: 3832; --                          JPOS DecreaseGlobal
0029: 2820; --                          JUMP Global_Loop
002A: 9021; --                          IN LEDGlobal
002B: 1882; --                          ADD PositiveDelta
002C: 107D; --                          STORE NewBright
002D: 20FF; --                          SUB 255
002E: 385C; --                          JPOS Assign255
002F: 087D; --                          LOAD NewBright
0030: 9821; --                          OUT LEDGlobal
0031: 2820; --                          JUMP Global_Loop
0032: 9021; --                          IN LEDGlobal
0033: 1883; --                          ADD NegativeDelta
0034: 107D; --                          STORE NewBright
0035: 3078; --                          JNEG AssignZero
0036: 087D; --                          LOAD NewBright
0037: 9821; --                          OUT LEDGlobal
0038: 2820; --                          JUMP Global_Loop
0039: 902D; --                          IN KeyIO
003A: 107E; --                          STORE KeyInput
003B: 4039; --                          JZERO Individual_Loop
003C: 487F; --                          AND B0
003D: 4880; --                          AND B1
003E: 3842; --                          JPOS IncreaseIndividual
003F: 4881; --                          AND B2
0040: 385F; --                          JPOS DecreaseIndividual
0041: 2839; --                          JUMP Individual_Loop
0042: 9000; --                          IN Switches
0043: 107B; --                          STORE Input
0044: B822; --                          LOADI LEDBaseADDR
0045: 107C; --                          STORE CurLEDADDR
0046: 087B; --                          LOAD Input
0047: 4801; --                          AND 1
0048: 3853; --                          JPOS BrightnessUp ; if LSB is 1, edit LED
0049: 087B; --                          LOAD Input
004A: 6011; --                          SHIFT -1 ; Shift switch input to operate on next LED bit
004B: 107B; --                          STORE Input
004C: 087C; --                          LOAD CurLEDADDR
004D: 6801; --                          ADDI 1 ; Iterate LED
004E: 107C; --                          STORE CurLEDADDR
004F: 0800; --                          LOAD
0050: 6FD4; --                          ADDI -44 ; Check condition 0x2C
0051: 3846; --                          JPOS IncreaseIndividual_Loop
0052: 2839; --                          JUMP Individual_Loop
0053: 087C; --                          LOAD CurLEDADDR
0054: 907C; --                          IN CurLEDADDR ; Read current brightness of this LED
0055: 1882; --                          ADD PositiveDelta
0056: 107D; --                          STORE NewBright ; Increase brightness
0057: 20FF; --                          SUB 255
0058: 385C; --                          JPOS Assign255 ; reassign overflows
0059: 087D; --                          LOAD NewBright
005A: 987C; --                          OUT CurLEDADDR ; Write new brightness to the LED
005B: 8800; --                          RETURN
005C: B8FF; --                          LOADI 255
005D: 107D; --                          STORE NewBright
005E: 8800; --                          RETURN
005F: 9000; --                          IN Switches
0060: 107B; --                          STORE Input
0061: B822; --                          LOADI LEDBaseADDR
0062: 107C; --                          STORE CurLEDADDR
0063: 087B; --                          LOAD Input
0064: 4801; --                          AND 1
0065: 3870; --                          JPOS BrightnessDown ; if LSB is 1, edit LED
0066: 087B; --                          LOAD Input
0067: 6011; --                          SHIFT -1 ; Shift switch input to operate on next LED bit
0068: 107B; --                          STORE Input
0069: 087C; --                          LOAD CurLEDADDR
006A: 6801; --                          ADDI 1 ; Iterate LED
006B: 107C; --                          STORE CurLEDADDR
006C: 0800; --                          LOAD
006D: 6FD4; --                          ADDI -44 ; Check if last LED has been operated on
006E: 3863; --                          JPOS DecreaseIndividual_Loop
006F: 8800; --                          RETURN
0070: 087C; --                          LOAD CurLEDADDR
0071: 907C; --                          IN CurLEDADDR ; Read current brightness of this LED
0072: 1883; --                          ADD NegativeDelta
0073: 107D; --                          STORE NewBright ; Increase brightness
0074: 3078; --                          JNEG AssignZero ; reassign overflows
0075: 087D; --                          LOAD NewBright
0076: 987C; --                          OUT CurLEDADDR ; Write new brightness to the LED
0077: 8800; --                          RETURN
0078: B800; --                          LOADI 0
0079: 107D; --                          STORE NewBright
007A: 8800; --                          RETURN
007B: 0000; -- Input: DW 0
007C: 0000; -- CurLEDADDR: DW 0
007D: 0000; -- NewBright: DW 0
007E: 0000; -- KeyInput: DW 0
007F: 0001; -- B0: DW 1
0080: 0002; -- B1: DW 2
0081: 0004; -- B2: DW 4
0082: 0020; -- PositiveDelta: DW 32
0083: FFE0; -- NegativeDelta: DW -32
0084: 0000; -- AdderSum: DW 0
0085: 0000; -- AdderInput: DW 0
0086: 03FF; -- 10bits: DW 1023
[0087..07FF] : 0000; -- [empty memory]
END;

