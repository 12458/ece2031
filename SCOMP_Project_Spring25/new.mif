WIDTH=16;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
0000: 0001; -- B0:          DW 1        ; Bit 0 mask (KEY0)
0001: 0002; -- B1:          DW 2        ; Bit 1 mask (KEY1)
0002: 0020; -- BrightDelta: DW 32       ; Brightness increment/decrement value
0003: 00FF; -- MaxBright:   DW 255      ; Maximum brightness value
0004: 0000; -- PrevSwitches: DW 0       ; Previous state of switches
0005: 0000; -- CurrSwitches: DW 0       ; Current state of switches
0006: 0080; -- CurBright:    DW 128     ; Current brightness (start at mid-level)
0007: 0000; -- KeyInput:     DW 0       ; Current key input state
0008: 0000; -- LEDAddr:      DW 0       ; Current LED address
0009: B880; --     LOADI 128            ; Set initial brightness to middle value
000A: 1006; --     STORE CurBright
000B: 9821; --     OUT LEDGlobal        ; Apply to global brightness
000C: B800; --     LOADI 0              ; Clear LEDs initially
000D: 9820; --     OUT LEDToggle
000E: 9000; --     IN Switches          ; Get initial switch state
000F: 1004; --     STORE PrevSwitches
0010: 902D; --     IN KeyIO
0011: 1007; --     STORE KeyInput
0012: 0807; --     LOAD KeyInput
0013: 4800; --     AND B0               ; Isolate KEY0 bit
0014: 4021; --     JZERO CheckKey1      ; If KEY0 not pressed, check KEY1
0015: 0806; --     LOAD CurBright
0016: 6FE0; --     ADDI -32             ; Subtract brightness delta
0017: 301C; --     JNEG SetZeroBright   ; If result negative, set to zero
0018: 1006; --     STORE CurBright      ; Store new brightness
0019: 9821; --     OUT LEDGlobal        ; Update global brightness
001A: 803D; --     CALL WaitForKeyRelease
001B: 2832; --     JUMP CheckSwitches   ; Skip other key checks
001C: B800; --     LOADI 0              ; Set minimum brightness
001D: 1006; --     STORE CurBright
001E: 9821; --     OUT LEDGlobal
001F: 803D; --     CALL WaitForKeyRelease
0020: 2832; --     JUMP CheckSwitches
0021: 0807; --     LOAD KeyInput
0022: 4801; --     AND B1               ; Isolate KEY1 bit
0023: 4032; --     JZERO CheckSwitches  ; If KEY1 not pressed, check switches
0024: 0806; --     LOAD CurBright
0025: 6820; --     ADDI 32              ; Add brightness delta
0026: 2003; --     SUB MaxBright        ; Check if greater than maximum
0027: 382E; --     JPOS SetMaxBright    ; If result positive, set to maximum
0028: 0806; --     LOAD CurBright       ; Reload current brightness
0029: 6820; --     ADDI 32              ; Add brightness delta
002A: 1006; --     STORE CurBright      ; Store new brightness
002B: 9821; --     OUT LEDGlobal        ; Update global brightness
002C: 803D; --     CALL WaitForKeyRelease
002D: 2832; --     JUMP CheckSwitches
002E: B8FF; --     LOADI 255            ; Set maximum brightness
002F: 1006; --     STORE CurBright
0030: 9821; --     OUT LEDGlobal
0031: 803D; --     CALL WaitForKeyRelease
0032: 9000; --     IN Switches
0033: 1005; --     STORE CurrSwitches
0034: 0805; --     LOAD CurrSwitches
0035: 5804; --     XOR PrevSwitches
0036: 4010; --     JZERO MainLoop       ; If no changes, go back to main loop
0037: 0805; --     LOAD CurrSwitches
0038: 5804; --     XOR PrevSwitches     ; Get changed bits
0039: 9820; --     OUT LEDToggle        ; Toggle those LEDs
003A: 0805; --     LOAD CurrSwitches
003B: 1004; --     STORE PrevSwitches
003C: 2810; --     JUMP MainLoop        ; Return to main loop
003D: 902D; --     IN KeyIO
003E: 383D; --     JPOS WaitForKeyRelease  ; If any key pressed, keep waiting
003F: 8800; --     RETURN                  ; Return when all keys released
[0040..07FF] : 0000; -- [empty memory]
END;
