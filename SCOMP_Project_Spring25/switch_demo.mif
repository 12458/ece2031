WIDTH=16;
DEPTH=2048;

ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

CONTENT BEGIN
0000: 902D; --                          IN KeyIO
0001: 1091; --                          STORE KeyInput
0002: 4000; --                          JZERO Initialization
0003: 4892; --                          AND B0
0004: 3809; --                          JPOS Demo1_Loop
0005: 0891; --                          LOAD KeyInput
0006: 4893; --                          AND B1
0007: 381B; --                          JPOS Demo2
0008: 2800; --                          JUMP Initialization
0009: B800; --                          LOADI 0
000A: 9820; --                          OUT LEDToggle ; Turn off all LEDs
000B: B8FF; --                          LOADI 255
000C: 9821; --                          OUT LEDGlobal
000D: 902D; --                          IN KeyIO
000E: 1091; --                          STORE KeyInput
000F: 400D; --                          JZERO AdderLoop
0010: 4894; --                          AND B2
0011: 3800; --                          JPOS Initialization
0012: 0891; --                          LOAD KeyInput
0013: 4892; --                          AND B0
0014: 400D; --                          JZERO AdderLoop ; Only continue if KEY1 is pressed
0015: 9000; --                          IN Switches ; Grab input value from Switches
0016: 1897; --                          ADD AdderSum ; Load current running sum (does nothing on first loop)
0017: 4899; --                          AND 10bits ; Mask relevant bits 
0018: 1097; --                          STORE AdderSum
0019: 9820; --                          OUT LEDToggle ; Display new sum on LEDs
001A: 280D; --                          JUMP AdderLoop ; Jump to InputLoop to wait for next value
001B: BBFF; --                          LOADI 1023
001C: 9820; --                          OUT LEDToggle
001D: B8FF; --                          LOADI 255
001E: 9821; --                          OUT LEDGlobal
001F: 902D; --                          IN KeyIO
0020: 1091; --                          STORE KeyInput
0021: 401F; --                          JZERO Demo2_Loop ; Only continue if a key is pressed
0022: 0891; --                          LOAD KeyInput
0023: 4894; --                          AND B2
0024: 3800; --                          JPOS Initialization
0025: 0891; --                          LOAD KeyInput
0026: 4892; --                          AND B0
0027: 3848; --                          JPOS Individual_Loop
0028: 0891; --                          LOAD KeyInput
0029: 4893; --                          AND B1 
002A: 382C; --                          JPOS Global_Loop
002B: 281F; --                          JUMP Demo2_Loop
002C: 902D; --                          IN KeyIO
002D: 1091; --                          STORE KeyInput
002E: 402C; --                          JZERO Global_Loop
002F: 0891; --                          LOAD KeyInput
0030: 4894; --                          AND B2
0031: 381F; --                          JPOS Demo2_Loop
0032: 0891; --                          LOAD KeyInput
0033: 4892; --                          AND B0
0034: 3839; --                          JPOS IncreaseGlobal
0035: 0891; --                          LOAD KeyInput
0036: 4893; --                          AND B1
0037: 3841; --                          JPOS DecreaseGlobal
0038: 282C; --                          JUMP Global_Loop
0039: 9021; --                          IN LEDGlobal
003A: 1895; --                          ADD PositiveDelta
003B: 1090; --                          STORE NewBright
003C: 20FF; --                          SUB 255
003D: 386F; --                          JPOS Assign255 ; Check for overflow
003E: 0890; --                          LOAD NewBright
003F: 9821; --                          OUT LEDGlobal
0040: 282C; --                          JUMP Global_Loop
0041: 9021; --                          IN LEDGlobal
0042: 1896; --                          ADD NegativeDelta
0043: 1090; --                          STORE NewBright
0044: 308B; --                          JNEG AssignZero ; Check for underflow
0045: 0890; --                          LOAD NewBright
0046: 9821; --                          OUT LEDGlobal
0047: 282C; --                          JUMP Global_Loop
0048: 902D; --                          IN KeyIO
0049: 1091; --                          STORE KeyInput
004A: 4048; --                          JZERO Individual_Loop
004B: 0891; --                          LOAD KeyInput
004C: 4894; --                          AND B2
004D: 381F; --                          JPOS Demo2_Loop
004E: 0891; --                          LOAD KeyInput
004F: 4892; --                          AND B0
0050: 3855; --                          JPOS IncreaseIndividual
0051: 0891; --                          LOAD KeyInput
0052: 4893; --                          AND B1
0053: 3872; --                          JPOS DecreaseIndividual
0054: 2848; --                          JUMP Individual_Loop
0055: 9000; --                          IN Switches
0056: 108E; --                          STORE Input
0057: 0822; --                          LOAD LEDBaseADDR
0058: 108F; --                          STORE CurLEDADDR
0059: 088E; --                          LOAD Input
005A: 4892; --                          AND B0
005B: 3866; --                          JPOS BrightnessUp ; if LSB is 1, edit LED
005C: 088E; --                          LOAD Input
005D: 6011; --                          SHIFT -1 ; Shift switch input to operate on next LED bit
005E: 108E; --                          STORE Input
005F: 088F; --                          LOAD CurLEDADDR
0060: 6801; --                          ADDI 1 ; Iterate LED
0061: 108F; --                          STORE CurLEDADDR
0062: 0800; --                          LOAD
0063: 6FD4; --                          ADDI -44 ; Check condition 0x2C
0064: 3859; --                          JPOS IncreaseIndividual_Loop
0065: 2848; --                          JUMP Individual_Loop
0066: 088F; --                          LOAD CurLEDADDR
0067: 908F; --                          IN CurLEDADDR ; Read current brightness of this LED
0068: 1895; --                          ADD PositiveDelta
0069: 1090; --                          STORE NewBright ; Increase brightness
006A: 20FF; --                          SUB 255
006B: 386F; --                          JPOS Assign255 ; reassign overflows
006C: 0890; --                          LOAD NewBright
006D: 988F; --                          OUT CurLEDADDR ; Write new brightness to the LED
006E: 8800; --                          RETURN
006F: B8FF; --                          LOADI 255
0070: 1090; --                          STORE NewBright
0071: 8800; --                          RETURN
0072: 9000; --                          IN Switches
0073: 108E; --                          STORE Input ; get current switch state
0074: 0822; --                          LOAD LEDBaseADDR
0075: 108F; --                          STORE CurLEDADDR ; reset current led address to base
0076: 088E; --                          LOAD Input
0077: 4892; --                          AND B0
0078: 3883; --                          JPOS BrightnessDown ; if LSB is 1, edit LED
0079: 088E; --                          LOAD Input
007A: 6011; --                          SHIFT -1 ; Shift switch input to operate on next LED bit
007B: 108E; --                          STORE Input
007C: 088F; --                          LOAD CurLEDADDR
007D: 6801; --                          ADDI 1 ; Iterate LED
007E: 108F; --                          STORE CurLEDADDR
007F: 0800; --                          LOAD
0080: 6FD4; --                          ADDI -44 ; Check if last LED has been operated on
0081: 3876; --                          JPOS DecreaseIndividual_Loop
0082: 8800; --                          RETURN
0083: 088F; --                          LOAD CurLEDADDR
0084: 908F; --                          IN CurLEDADDR ; Read current brightness of this LED
0085: 1896; --                          ADD NegativeDelta
0086: 1090; --                          STORE NewBright ; Increase brightness
0087: 308B; --                          JNEG AssignZero ; reassign overflows
0088: 0890; --                          LOAD NewBright
0089: 988F; --                          OUT CurLEDADDR ; Write new brightness to the LED
008A: 8800; --                          RETURN
008B: B800; --                          LOADI 0
008C: 1090; --                          STORE NewBright
008D: 8800; --                          RETURN
008E: 0000; -- Input: DW 0
008F: 0000; -- CurLEDADDR: DW 0
0090: 0000; -- NewBright: DW 0
0091: 0000; -- KeyInput: DW 0
0092: 0001; -- B0: DW 1
0093: 0002; -- B1: DW 2
0094: 0004; -- B2: DW 4
0095: 0020; -- PositiveDelta: DW 32
0096: FFE0; -- NegativeDelta: DW -32
0097: 0000; -- AdderSum: DW 0
0098: 0000; -- AdderInput: DW 0
0099: 03FF; -- 10bits: DW 1023
[009A..07FF] : 0000; -- [empty memory]
END;

